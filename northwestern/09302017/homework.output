
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ##Exercise 1.118 ----------------------------------------------------
> 
> drawShadeInNorm <- function(begin, end, title) {
+     cord.x <- c(begin,seq(begin,end,0.01),end) 
+     cord.y <- c(0,dnorm(seq(begin,end,0.01)),0) 
+     curve(dnorm(x,0,1),xlim=c(-6,6),main=title) 
+     polygon(cord.x,cord.y,col='skyblue')
+     abline(0,0)
+ }
> 
> ## Z > 1.75
> p<-(1-pnorm(1.75))
> p
[1] 0.04005916
> drawShadeInNorm(1.75, 6, "Exercise 1.118  Z > 1.75")
> 
> ## Z < 1.75
> p<-pnorm(1.75)
> p
[1] 0.9599408
> drawShadeInNorm(-6, 1.75, "Exercise 1.118  Z < 1.75")
> 
> ## Z > -0.80
> p<-(1-pnorm(-0.80))
> p
[1] 0.7881446
> drawShadeInNorm(-0.8, 6, "Exercise 1.118  Z > -0.80")
> 
> ## -0.80 < Z < 1.75
> p<-(pnorm(1.75) - pnorm(-0.80))
> p
[1] 0.7480854
> drawShadeInNorm(-0.8, 1.75, "Exercise 1.118  -0.80 < Z < 1.75")
> 
> 
> ##Exercise 1.122 ----------------------------------------------------
> ## As WAIS matches Normal with mean 100 and standard deviation 15 approximately, 
> ## we just need to get P(IQ<70) per Normal(100, 15).
> ## So the result is:
> pnorm(70, 100, 15)
[1] 0.02275013
> 
> 
> ##Exercise 2.5 ----------------------------------------------------
> ## Question (a)
> ## The cases are all the tweets posted on tweets of "you" and "nine of your friends" during a week;
> 
> ## Question (b)
> ##  Categorical variables: the day of the week, the sex of the person posting the tweet;
> ##  Quantitative variables: the number of click counts, the time of day, the length of the tweet;
> 
> ## Question (c)
> ##  The day of the week, the sex of the person posting the tweet, the time of day and the length of the tweet could be explanatory variables;
> ##  the number of click counts is the response click.
> ##  Below examples should help to explain the association.
> ##      Time and day: a tweet posted in the middle night may not get many clicks;
> ##      a tweet posted at 8:00 AM of weekday may receive more clicks than a tweet posted at 8:00 AM of weekend; because more people may be commuting to office and using tweet to kill time at 8:00 AM on weekdays, but very possible more people may be in bed at 8:00 AM on weekend.
> ##      Gender of poster: tweets posted by females may receive more clicks because females maybe better at communication and own more friends;
> ##      Length of the tweets: too short tweets may be non-sense and won't be clicked by many times; too long tweets may be easily ignored as Internet users may be not so patient to read longer text; tweets with median length may be more popular.
> 
> 
> 
> ##Exercise 2.34 ----------------------------------------------------
> ## Question (a)
> ## From the numerical value, the 2 variables are negative association; the association is absolute but not every strong.
> 
> ## Question (b)
> ## Suppose having birth is event B and surfing Internet is event C; if there is a lurk factor which affects
> ## event B and event C at the same time, we can see the statistic of B and C are accociation in numerical value.
> ## However we cannot prove B and C are related logically because they are related in numerical value.
> ## In fact, the lurk factor is the development level: 
> ## The more devloped the country is, the lower birth ratio the country; at the same time the higher Internet user ratio the country owns.
> 
> 
> ##Exercise 2.59 ----------------------------------------------------
> birthAndInternetUser<-read.csv("/home/fabius/workspace/mysite/northwestern/CSV/Chapter\ 2/EX02-059INBIRTH.csv")
> attach(birthAndInternetUser)
> ## Question (a)
> dataForScatterplot<-data.frame(Users, BirthRate2011)
> plot(dataForScatterplot, xlab="Internet users", ylab="Birth", main="Exercise 2.59 (a)")
> ## The correlation is:
> cor(BirthRate2011, Users)
[1] -0.7297096
> 
> ## Question (b)
> ## Yes, it's a good numerical summary. Genernally the more devloped the country is, the lower birth ratio the country 
> ## owns. The users of Internet could be one of index to reflect the how developed a country is.
> 
> 
> ##Exercise 2.75 ----------------------------------------------------
> studentsOfStates<-read.csv("/home/fabius/workspace/mysite/northwestern/CSV/Chapter\ 2/EX02-075COLLEGE.csv")
> attach(studentsOfStates)
> dataForScatterplot<-data.frame(Population, Undergrads)
> 
> ## Question (a)
> plot(dataForScatterplot, main="Exercise 2.75 (a)")
> ## see below graph
> 
> ## Question (b)
> lm(Population~Undergrads)

Call:
lm(formula = Population ~ Undergrads)

Coefficients:
(Intercept)   Undergrads  
  466227.11        18.17  

> modelPU<-lm(Undergrads~Population)
> yfit<-modelPU$fitted.values
> lines(Population, yfit)
> ## from the the graph, there is an outlier in the top-right
> 
> ## Question (c)
> meanX<-5955551
> sdX<-6620733
> meanY<-302136
> sdY<-358460
> r<-0.98367
> 
> b1<-(r*sdY/sdX)
> b0<-(meanY-b1*meanX)
> 
> b0
[1] -15044.15
> b1
[1] 0.0532579
> ## So the equation of regression line is y=-15044.15+0.0532579*x (y is undergrads and x is population)
> 
> 
> ##Exercise 2.76 ----------------------------------------------------
> nMeanX<-4367448
> nSdX<-3310957
> nMeanY<-220134
> nSdy<-165270
> nr<-0.97081
> 
> nb1<-(nr*nSdy/nSdX)
> nb0<-(nMeanY-b1*nMeanX)
> 
> nb0
[1] -12467.12
> nb1
[1] 0.04845903
> 
> ## Reuse the "dataForScatterplot" variable from exercise 2.75
> plot(dataForScatterplot, main="Exercise 2.76")
> ## Draw the least-squares regression line based on all data
> abline(b0, b1, col="blue")
> ## Draw the least-squares regression line eliminating the for largest states
> abline(nb0, nb1, col="gray")
> 
> 
> ##Exercise 2.77 ----------------------------------------------------
> ## Question (a)
> ## Per excercise 2.75 (c) -- the equation of regression line is y=-15044.15+0.0532579*x (y is undergrads and x is population)
> x<-4000000
> predictedGraduats<-(-15044.15+0.0532579*x)
> ## The predicted number of undergraduate students is: 
> predictedGraduats
[1] 197987.4
> 
> ## Question (b)
> predictedGraduats<-(nb0+nb1*x)
> ## The predicted number of undergraduate students based on statistic of 46 states is: 
> predictedGraduats
[1] 181369
> 
> proc.time()
   user  system elapsed 
  0.188   0.004   0.249 
