
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ##Section 2, #1 ----------------------------------------------------
> 
> x<-c(4,2,6)
> y<-c(1,0,-1)
> 
> length(x)
[1] 3
> 
> sum(x)
[1] 12
> 
> sum(x^2)
[1] 56
> 
> x+y
[1] 5 2 5
> 
> x*y
[1]  4  0 -6
> 
> x-2
[1] 2 0 4
> 
> x^2
[1] 16  4 36
> 
> 
> ##Section 2, #2 ----------------------------------------------------
> 7:11
[1]  7  8  9 10 11
> 
> seq(2,9)
[1] 2 3 4 5 6 7 8 9
> 
> seq(4,10,by=2)
[1]  4  6  8 10
> 
> seq(3,30,length=10)
 [1]  3  6  9 12 15 18 21 24 27 30
> 
> seq(6,-4,by=-2)
[1]  6  4  2  0 -2 -4
> 
> 
> ##Section 2, #3 ----------------------------------------------------
> rep(2,4)
[1] 2 2 2 2
> 
> rep(c(1,2),4)
[1] 1 2 1 2 1 2 1 2
> 
> rep(c(1,2),c(4,4))
[1] 1 1 1 1 2 2 2 2
> 
> rep(1:4,4)
 [1] 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4
> 
> rep(1:4,rep(3,4))
 [1] 1 1 1 2 2 2 3 3 3 4 4 4
> 
> 
> ##Section 2, #4 ----------------------------------------------------
> rep(6,6)
[1] 6 6 6 6 6 6
> 
> rep(c(5,8), 3)
[1] 5 8 5 8 5 8
> 
> rep(c(5,8), rep(4,2))
[1] 5 5 5 5 8 8 8 8
> 
> 
> ##Section 3, #1 ----------------------------------------------------
> x<- c(5,9,2,3,4,6,7,0,8,12,2,9)
> 
> x[2]
[1] 9
> 
> x[2:4]
[1] 9 2 3
> 
> x[c(2,3,6)]
[1] 9 2 6
> 
> x[c(1:5,10:12)]
[1]  5  9  2  3  4 12  2  9
> 
> x[-(10:12)]
[1] 5 9 2 3 4 6 7 0 8
> 
> 
> ##Section 3, #2 ----------------------------------------------------
> y<-c(33,44,29,16,25,45,33,19,54,22,21,49,11,24,56)
> 
> summaryMatrix<-matrix(y, nr=3)
> #summary of each day
> apply(summaryMatrix, 2, sum)
[1] 106  86 106  92  91
> 
> summaryMatrix<-matrix(y, nr=5, by=T)
> #summary of each shop
> apply(summaryMatrix, 2, sum)
[1] 115 133 233
> 
> 
> ##Section 5, #1 ----------------------------------------------------
> attach(quakes)
> summary(quakes[,3:4])
     depth            mag      
 Min.   : 40.0   Min.   :4.00  
 1st Qu.: 99.0   1st Qu.:4.30  
 Median :247.0   Median :4.60  
 Mean   :311.4   Mean   :4.62  
 3rd Qu.:543.0   3rd Qu.:4.90  
 Max.   :680.0   Max.   :6.40  
> 
> 
> ##Section 5, #2 ----------------------------------------------------
> attach(mtcars)
> #the mean weight
> mean(wt)
[1] 3.21725
> #the mean of fuel consumption
> mean(mpg)
[1] 20.09062
> 
> 
> ##Section 8, #1 ----------------------------------------------------
> x<-rnorm(100)
> hist(x, main="Section 8, #1 Graph#1", xlab="title of x", ylab="title of y", breaks=9)
> boxplot(x, main="Section 8, #1 Graph#2")
> 
> 
> ##Section 8, #2 ----------------------------------------------------
> x<- (-10):10
> n<-length(x)
> y<-rnorm(n,x,4)
> plot(x,y, main="Section 8, #2")
> abline(0,1)
> 
> 
> ##Section 8, #3 ----------------------------------------------------
> data(nhtemp)
> plot(nhtemp, main="Section 8, #3")
> 
> 
> ##Section 8, #4 ----------------------------------------------------
> temp<-as.vector(nhtemp)
> plot(1912:1971,temp, main="Section 8, #4, Graph#1")
> plot(1912:1971,temp,type="l", main="Section 8, #4, Graph#2")
> plot(1912:1971,temp,type="b", main="Section 8, #4, Graph#3")
> 
> 
> ##Other exercises
> 
> ##5. Consider the following data set...
> x<-c(97, 82, 85, 61, 14, 22, 51, 16, 55, 44, 70)
> summary(x)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  14.00   33.00   55.00   54.27   76.00   97.00 
> ## About the different method to Q1 and Q3: the median is included as the part of "half" 
> ## while calcualting the Q1 and Q3
> boxplot(x, main="Other exercises #5")
> ## IRQ equlas Q3-Q1=43;
> ## nothing is more than (Q3+1.3*IRQ)
> ## nothing is less than (Q1-1.3*IRQ)
> ## so there is no outliner
> 
> 
> 
> ##6. Textbook Exercise 1.128
> ## To get "what is his percentile", just need to know "how many people get less than 2050 in pencentage"
> ## The distrubtion of SAT matches N(1498, 316) according to the declaration
> ## As z=(2050-1498)/316=1.746835
> ## By query the table of standard normal distribution, we get:
> ## P(x<1.746835) = 0.9599 = 95.99%
> ## So his percentile is 96%
> 
> 
> ##7. Textbook Exercise 1.162
> id<-c("AA", "EE", "II", "BB", "FF", "JJ", "CC", "GG", "KK", "DD", "HH", "LL", "Other")
> spamCount<-c(1818, 399, 251, 1358, 389, 178, 442, 304, 158, 416, 251, 103)
> ## How many did the others receive in total:
> othersInTotal<-6693-sum(spamCount)
> othersInTotal
[1] 626
> spamCountWithOther<-c(spamCount, othersInTotal)
> 
> allData<-data.frame(id, spamCountWithOther)
> allData<-allData[ order(-allData[,2]), ]
> pie.spamCount <- allData[,2]
> names(pie.spamCount) <- allData[,1]
> pie(pie.spamCount, main="Other exercises #7. Textbook Exercise 1.162")
> 
> proc.time()
   user  system elapsed 
  0.176   0.000   0.228 
