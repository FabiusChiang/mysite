
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ##Exercise 6.137 ----------------------------------------------------
> 
> drawShadeInNorm <- function(begin, end, title, sigma) {
+     begin <- begin * sigma
+     end <- end * sigma
+     cord.x <- c(begin,seq(begin,end,0.01),end) 
+     cord.y <- c(0,dnorm(seq(begin,end,0.01), 0, sigma),0) 
+     curve(dnorm(x,0,sigma),xlim=c(-6 * sigma,6 * sigma),main=title) 
+     polygon(cord.x,cord.y,col='skyblue')
+     abline(0,0)
+ }
> 
> drawShadeInNorm(6.9/(55/sqrt(104)), 6, "Exercise 6.137 (a)", 55/sqrt(104))
> 
> 
> ##Exercise 6.141 ----------------------------------------------------
> x<-rnorm(15, 20, 5)
> x
 [1] 31.57413 15.72438 22.22969 14.14441 21.72538 18.46364 27.41583 22.35075
 [9] 20.61726 25.37056 18.43048 23.08744 21.26127 14.80938 12.73105
> miu=mean(x)
> sigma=5/sqrt(15)
> startOfConfidenceInterval=miu-1.96*sigma
> startOfConfidenceInterval
[1] 18.13203
> endOfConfidenceInterval=miu+1.96*sigma
> endOfConfidenceInterval
[1] 23.19273
> 
> count<-0
> sigma=5/sqrt(15)
> for (i in 1:100) {
+     x<-rnorm(15, 20, 5)
+     miu=mean(x)
+     startOfConfidenceInterval=miu-1.96*sigma
+     
+     endOfConfidenceInterval=miu+1.96*sigma
+     # startOfConfidenceInterval
+     # endOfConfidenceInterval
+ 
+     if (startOfConfidenceInterval<20 && endOfConfidenceInterval>20){
+         count <- count +1
+     }
+     i
+     count
+ }
> 
> count
[1] 94
> 
> proc.time()
   user  system elapsed 
  0.208   0.016   1.087 
